///
/// @name stretch
/// @description In place animation which stretches an element horizontally
///
/// @param {Number} $duration - the length of time the animation should run
/// @param {Number} $delay - the time to delay the animation before it start
/// @returns {Number} $count - the number of times an animation should run
///
/// @example http://sassmeister.com/gist/34186eadbafdfd075489
///

@if $animation-use-stretch == true {

  @keyframes stretch {
    0%, 100% {
      transform: none;
    }

    30% {
      transform: scale3d(1.25, 0.75, 1);
    }

    40% {
      transform: scale3d(0.75, 1.25, 1);
    }

    50% {
      transform: scale3d(1.15, 0.85, 1);
    }

    65% {
      transform: scale3d(.95, 1.05, 1);
    }

    75% {
      transform: scale3d(1.05, .95, 1);
    }
  }
}

@mixin stretch($duration: $animation-duration, $delay: $animation-delay, $count: $animation-iterations) {
  @if $animation-use-stretch == true {
    animation-delay: $delay;
    animation-duration: $duration;
    animation-iteration-count: $count;
    animation-name: stretch;
  }
}
