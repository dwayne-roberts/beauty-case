///
/// @name drop-in
/// @description Revealing animation elastically dropping in an element
///
/// @param {Number} $duration - the length of time the animation should run
/// @param {Number} $delay - the time to delay the animation before it start
/// @param {Number} $count - the number of times an animation should run
///
/// @example http://sassmeister.com/gist/be17f4afde78a4e821ce
///

@if $animation-use-drop-in == true {
  @keyframes dropIn {
    0% {
      opacity: 0;
      transform: translate3d(0, -3000px, 0);
    }

    60% {
      opacity: 1;
      transform: translate3d(0, 25px, 0);
    }

    75% {
      transform: translate3d(0, -10px, 0);
    }

    90% {
      transform: translate3d(0, 5px, 0);
    }

    100% {
      transform: none;
    }
  }
}

@mixin drop-in($duration: $animation-duration, $delay: $animation-delay, $count: $animation-iterations) {
  @if $animation-use-drop-in == true {
    animation-delay: $delay;
    animation-duration: $duration;
    animation-fill-mode: both;
    animation-iteration-count: $count;
    animation-name: dropIn;
  }
}
