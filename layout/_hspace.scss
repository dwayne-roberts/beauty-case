/**
 * @name hspace
 * @description Add horizontal space, margin or padding, following a layout style
 * Divide a given width over an elements horizontal margin or padding based on a certain style, top, bottom, or split
 *
 * @param {Number} $width    - the total width of the margins or padding
 * @param {String} $style    - the layout style left, right of split
 * @param {String} $property - the property margin or padding
 *
 * @example http://sassmeister.com/gist/d58f3bdf2378475a51db
 */

@mixin hspace($width, $style: split, $property: margin) {

  $exception: false;
  $property-options: margin, padding;
  $style-options : left, right, split;

  // Error checking
  @if type-of($width) != 'number' {
    @warn "Type Error: Expected a $width of type 'number', provided #{type-of($width)} #{$width}";
    $exception: true;
  }

  @if not index($style-options, $style) {
    @warn "Range Error: #{$style} was not found among valid options: #{$style-options}";
    $exception: true;
  }

  @if not index($property-options, $property) {
    @warn "Range Error: #{$property} was not found among valid options: #{$property-options}";
    $exception: true;
  }


  // Logic
  @if not $exception {
    @if $style == left {
      #{$property}-left: $width;
    } @else if $style == right {
      #{$property}-right: $width;
    } @else {
      #{$property}-left: floor($width/2);
      #{$property}-right: ceil($width/2);
    }
  }
}


/**
 * @name horizontal-margin
 * @alias horizontal-margin
 */

@mixin hspace($args...) {
  @include horizontal-margin($args...);
}


/**
 * @name horizontal-padding
 * @alias horizontal-padding
 */

@mixin hspace($args...) {
  @include horizontal-padding($args...);
}
