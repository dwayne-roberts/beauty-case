///
/// @name vspace
/// @description Add vertical space, margin or padding, following a layout style
/// Divide a given height over an elements vertical margin or padding based on a certain style, top, bottom, or split
///
/// @param {Number} $height   - the total height of the margin or padding
/// @param {String} $style    - the layout style top, bottom or split
/// @param {String} $property - the property margin or padding
///
/// @example http://sassmeister.com/gist/a3fcac9200198181d1ed
///
@mixin vspace($height, $style: bottom, $property: margin) {

  $exception: false;
  $property-options: margin, padding;
  $style-options : bottom, top, split;

  // Error checking
  @if type-of($height) != 'number' {
    @warn "Type Error: Expected a $height of type 'number', provided #{type-of($height)} #{$height}";
    $exception: true;
  }

  @if not index($style-options, $style) {
    @warn "Range Error: #{$style} was not found among valid options: #{$style-options}";
    $exception: true;
  }

  @if not index($property-options, $property) {
    @warn "Range Error: #{$property} was not found among valid options: #{$property-options}";
    $exception: true;
  }


  // Logic
  @if not $exception {
    @if $style == bottom {
      #{$property}-bottom: $height;
      #{$property}-top: 0;
    } @else if $style == top {
      #{$property}-bottom: 0;
      #{$property}-top: $height;
    } @else {
      #{$property}-bottom: floor($height/2);
      #{$property}-top: ceil($height/2);
    }
  }
}


///
/// @name vertical-margin
/// @alias vspace
///
@mixin vertical-margin($args...) {
  @include vspace($args...);
}


///
/// @name vertical-padding
/// @alias vspace
///
@mixin vertical-padding($args...) {
  @include vspace($args...);
}
