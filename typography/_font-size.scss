///
/// @name font-size
/// @description Set the font-size in rems with a px fallback
///
/// @requires {Function} px-to-rem
/// @param {Number} $size - the font-size in pixels
///
/// @example http://sassmeister.com/gist/c6886aa3ecf7dbef7fa8
///
@mixin font-size($size) {

  $exception: false;

  // Error checking {
  @if type-of($size) != 'number' {
    @warn "Type Error: Expected a $size of type 'number', provided #{type-of($size)} #{$size}";
    $exception: true;
  }

  @if unit($size) != 'px' {
    @warn "Unit Error: Unit of $size - (#{unit($size)}) was incorrect, expected 'px'";
    $exception: true;
  }

  @if not variable-exists(use-rem-units) {
    @warn 'Reference Error: Requirement; $us-rem-units not found';
    $use-rem-units: false !global;
  }

  @if not variable-exists(use-px-fallback) {
    @warn 'Reference Error: Requirement; $use-px-fallback not found';
    $use-px-fallback: false !global;
  }

  @if $use-rem-units {
    @if not function-exists(px-to-rem) {
      @warn 'Reference Error: Requirement; px-to-rem() not found';
      $exception: true;
    }
  }

  // Logic
  @if not $exception {
    @if not $use-rem-units or $use-px-fallback {
      font-size: $size;
    }

    @if $use-rem-units {
      font-size: px-to-rem($size);
    }
  }
}
